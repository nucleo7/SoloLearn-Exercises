https://code.sololearn.com/clMQLwHl32R1/#cs



// Exercises from Course Material

// Interfaces are implemented, not inherited
// Multiple interfaces can be implemented
// Convention is to user capital I for interfaces
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SoloLearn
{
    class Program
    {
        // Interfaces - IShape
        public interface IShape {
            void Draw();
        }
        // Interfaces - IAction
        public interface IAction {
            void Animate();
        }
        // Interfaces - Abilities
        public interface IAbilities {
            void FaceCount(int x);
        }
        // Classes - Circle
        class Circle : IShape, IAction {
            public void Draw() {
                Console.WriteLine("Draw: Circle");
            }
            public void Animate() {
                Console.WriteLine("Animate: Circle");
            }
        }
        // Classes - Square
        class Square : IShape, IAction {
            public void Draw() {
                Console.WriteLine("Draw: Square");
            }
            public void Animate() {
                Console.WriteLine("Animate: Square");
            }
        }
        // Classes - Polygon
        class Polygon : IShape, IAction, IAbilities {
            public void Draw() {
                Console.WriteLine("Draw: Polygon");
            }
            public void Animate() {
                Console.WriteLine("Animate: Polygon");
            }
            public void FaceCount(int y) {
                Console.WriteLine("FaceCount: " + y);
            }
        }
        static void Main(string[] args)
        {
            // Creating circles
            IShape a1 = new Circle();
            IShape a2 = new Circle();
            IAction a3 = new Circle();
            IAction a4 = new Circle();
            
            a1.Draw();
            a2.Draw();
            a3.Animate();
            a4.Animate();
            
            // Creating squares
            IShape b1 = new Square();
            IShape b2 = new Square();
            IAction b3 = new Square();
            IAction b4 = new Square();
            
            b1.Draw();
            b2.Draw();
            b3.Animate();
            b4.Animate();
            
            // Creating polygons
            IShape c1 = new Polygon();
            IShape c2 = new Polygon();
            IAction c3 = new Polygon();
            IAction c4 = new Polygon();
            IAbilities c5 = new Polygon();
            IAbilities c6 = new Polygon();
            
            c1.Draw();
            c2.Draw();
            c3.Animate();
            c4.Animate();
            c5.FaceCount(5);
            c6.FaceCount(6);

        }
    }
}
